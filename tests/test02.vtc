varnishtest "backend() with cached body"

server s1 {
	rxreq
	txresp -hdr "bleep: bloop" -hdr "connection: close" -body "0123456789"
	expect req.body == "0123456789abcdefABCDEF"

	close
	accept

	rxreq
	txresp
} -start

# VCL, no backend needed
varnish v1 -vcl {
	import reqwest from "${vmod}";
	import std;

	backend s1 none;

	sub vcl_init {
		new client = reqwest.client();
	}

	sub vcl_recv {
		std.cache_req_body(100KB);
	}

	sub vcl_backend_fetch {
		set bereq.backend = client.backend();
	}
} -start
varnish v1 -cliok "param.set debug +syncvsl"

logexpect l1 -v v1 -i Fetch_Body {
        expect 0 * Fetch_Body "length stream"
} -start

client c1 {
	txreq -method "POST" -hdr "host: ${s1_addr}:${s1_port}" -nolen -hdr "Transfer-Encoding: chunked"
	chunked "0123456789"
	chunked "abcdef"
	chunked "ABCDEF"
	chunkedlen 0

	rxresp
	expect resp.http.bleep == "bloop"
	expect resp.body == "0123456789"

	txreq -url "/empty" -hdr "host: ${s1_addr}:${s1_port}"
	rxresp
	expect resp.status == 200
	expect resp.body == ""
} -run

logexpect l1 -wait

server s1 -wait
